/* Query 1 - Query Used for The First Insight */
SELECT film_title,
       category_name,
       COUNT(rental) rental_count
FROM
  (SELECT f.title film_title,
          c.name category_name,
          r.rental_date rental
   FROM film_category fc
   JOIN category c
     ON c.category_id = fc.category_id
   JOIN film f
     ON f.film_id = fc.film_id
   JOIN inventory i
     ON f.film_id = i.film_id
   JOIN rental r
     ON i.inventory_id = r.inventory_id
     WHERE c.name IN ('Animation',
                      'Children',
                      'Classics',
                      'Comedy',
                      'Family',
                      'Music')) table1
GROUP BY 1,
         2
ORDER BY category_name


# Python Code for Query 1 visualization
#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Convert the csv file to a dataframe
df_1 = pd.read_csv('Question_1_Solution.csv')
# Read the first 10 Observations
df_1.head(10)

# Visualization
# Size of the chart
plt.figure(figsize=(10,8))
# chart title
plt.title('A Stacked Visualization of Family Rentals Based on Movie Categories ')
# x axis label
plt.xlabel('Rental Count')
# y axis label
plt.ylabel('Frequency Distribution')
# Show visualization
sns.histplot(data=df_1, x="rental_count", hue="category_name", multiple="stack", shrink=.8);



/* Query 2 - Query Used for The Second Insight */
SELECT f.title film_title,
       c.name category_name,
       f.rental_duration rental_duration,
       NTILE(4) OVER (PARTITION BY rental_duration
                    ORDER BY rental_duration) AS standard_quartile
FROM film_category fc
JOIN category c
  ON c.category_id = fc.category_id
JOIN film f
  ON f.film_id = fc.film_id
WHERE c.name IN ('Animation',
                 'Children',
                 'Classics',
                 'Comedy',
                 'Family',
                 'Music')


# Python Code for Query 2 visualization
#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Convert the csv file to a dataframe
df_2 = pd.read_csv('Question_2_Solution.csv')
# Read the first 10 Observations
df_2.head(10)

# Size of the chart
plt.figure(figsize=(9,7))
# chart title
plt.title('A Visualization of The Rental Duration of Movie Categories ')
# x axis label
plt.xlabel('Movie Rental Duration (Days)')
# y axis label
plt.ylabel('Frequency the Rental Distribution')
# Show visualization
sns.kdeplot(data=df_2, x="rental_duration", hue="category_name");



/* Query 3 - Query Used for The Third Insight */
SELECT table1.category_name AS name,
       table1.standard_quartile,
       count(table1.standard_quartile)
FROM
  (SELECT c.name category_name,
          f.rental_duration rental_duration,
          NTILE(4) OVER (
                       ORDER BY rental_duration) AS standard_quartile
   FROM film_category fc
   JOIN category c
     ON c.category_id = fc.category_id
   JOIN film f
     ON f.film_id = fc.film_id
   WHERE c.name IN ('Animation',
                    'Children',
                    'Classics',
                    'Comedy',
                    'Family',
                    'Music')) table1
GROUP BY 1,
         2
ORDER BY 1,
         2


# Python Code for Query 3 visualization
#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Convert the csv file to a dataframe
df_3 = pd.read_csv('Question_3_Solution.csv')
# Read the first 10 Observations
df_3.head(10)

#Size of the chart
plt.figure(figsize=(10,8))
# chart title
plt.title('An Analysis of Rentals Duration Count And Movie Categories ')
# x axis label
plt.xlabel('Rental Count')
# y axis label
plt.ylabel('Quartile Range of Rental Duration')
# Show visualization
sns.kdeplot(data=df_3, x="count", hue="name");



/* Query 4 - Query Used for The Forth Insight */
SELECT DATE_TRUNC('month', p.payment_date) pay_mon,
       c.first_name || ' ' || c.last_name AS full_name,
       COUNT(p.amount) AS pay_countpermon,
       SUM(p.amount) AS pay_amount
FROM customer c
JOIN payment p
  ON p.customer_id = c.customer_id
WHERE c.first_name || ' ' || c.last_name IN
    (SELECT table1.full_name
     FROM
       (SELECT c.first_name || ' ' || c.last_name AS full_name,
               SUM(p.amount) AS amount_total
        FROM customer c
        JOIN payment p
          ON p.customer_id = c.customer_id
        GROUP BY 1
        ORDER BY 2 DESC LIMIT 10) table1)
  AND (p.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
GROUP BY 2,
         1
ORDER BY 2,
         1,
         3

# Python Code for Query 4 visualization
#import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Convert the csv file to a dataframe
df_4 = pd.read_csv('Question_4_Solution.csv')
# Read the first 10 Observations
df_4.head(10)


#Size of the chart
plt.figure(figsize=(10,8))
# chart title
plt.title('A Scatter Plot Distribution of Payments')
# x axis label
plt.xlabel('Amount Paid ($)')
# y axis label
plt.ylabel('Number of Payments Per Month')
# Show visualization
sns.scatterplot(data=df_4, x="pay_amount", y="pay_countpermon", hue='full_name');
